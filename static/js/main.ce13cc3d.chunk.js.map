{"version":3,"sources":["hooks/auth-hook.js","context/themeContext.js","Components/Reusable/Spinner.js","Components/Story/Story.js","Components/StoriesContainer/StoriesContainer.js","Components/NewStoryContainer/NewStoryContainer.js","context/AuthContext.js","Components/StoryBoard/StoryBoard.js","Components/Reusable/Button.js","Components/Reusable/ErrorModal.js","Components/Auth/Login.js","Components/Nav/Nav.js","Components/Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["logoutTimer","themeContext","createContext","Spinner","props","color","size","loading","isLoading","Story","useState","isExpanded","expand","dark","useContext","className","title","style","height","description","onClick","editStory","id","e","deleteStory","StoriesContainer","stories","length","map","story","key","progress","updateProgress","NewStoryContainer","newStory","setStory","inEdit","setEdit","handleChange","target","name","value","useEffect","undefined","storyToEdit","onSubmit","preventDefault","submitEditStory","addStory","onChange","type","placeholder","AuthContext","isLoggedIn","userId","token","login","logout","StoryBoard","setState","auth","setStoryToEdit","setIsLoading","getStories","a","fetch","process","method","headers","response","json","responseData","userStories","reverse","ok","Error","message","console","log","body","JSON","stringify","tags","creator","updatedStories","filter","toEdit","editedStory","updateProgressHandler","storyId","Button","classes","children","ErrorModal","Login","email","isValid","password","user","setUser","loginMode","setLoginMode","setLoading","error","setError","onChangeHandler","loginHandler","htmlFor","Nav","to","Settings","setDark","window","localStorage","setItem","checked","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","App","routes","Provider","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+XACIA,E,+ECKWC,EAHMC,yBAAc,G,QCSpBC,EATC,SAACC,GAIf,OACE,kBAAC,aAAD,CAAYC,MAAM,UAAUC,KAAM,GAAIC,QAASH,EAAMI,aCuC1CC,G,MA3CD,SAAAL,GAAU,IAAD,EACQM,oBAAS,GADjB,mBACdC,EADc,KACFC,EADE,KAEdC,EAAQC,qBAAWb,GAAnBY,KAeP,OACE,yBAAKE,UAAYF,EAAiB,mBAAV,SACtB,yBAAKE,UAAU,YACb,4BAAKX,EAAMY,QAGb,yBACED,UAAU,cACVE,MAAON,EAAa,CAAEO,OAAQ,SAAY,CAAEA,OAAQ,SAEpD,uCAASd,EAAMe,YAAf,MAAqC,IACrC,yBAAKJ,UAAU,WACb,uBAAGA,UAAU,cAAcK,QAAS,kBAAMhB,EAAMiB,UAAUjB,EAAMkB,OAChE,uBAAGP,UAAU,mBAAmBK,QArBb,SAAAG,GACzBnB,EAAMoB,YAAYpB,EAAMkB,OAqBlB,uBACEP,UACGJ,EAAqC,oBAAxB,sBAEhBS,QA9BU,SAAAG,GAClBX,GAAQD,WC2BGc,G,MA7BU,SAAArB,GAAU,IAC1BS,EAAQC,qBAAWb,GAAnBY,KAEP,OACE,yBAAKE,UAAYF,EAA4B,yCAArB,oBAEtB,0CACCT,EAAMI,UAAY,kBAAC,EAAD,MAEM,IAAzBJ,EAAMsB,QAAQC,OAAe,yEAAoDvB,EAAMsB,QAAQE,KAAI,SAAAC,GAAK,OACtG,kBAAC,EAAD,CACEb,MAAOa,EAAMb,MACbM,GAAIO,EAAMP,GACVH,YAAaU,EAAMV,YACnBW,IAAKD,EAAMP,GACXE,YAAapB,EAAMoB,YACnBO,SAAUF,EAAME,SAChBV,UAAWjB,EAAMiB,UACjBW,eAAgB5B,EAAM4B,eACtBxB,UAAWJ,EAAMI,kB,gBC8CZyB,G,MApEW,SAAA7B,GAAU,IAAD,EACJM,mBAAS,CAAEM,MAAO,GAAIG,YAAa,GAAIG,GAAI,GAAIS,UAAU,IADrD,mBAC1BG,EAD0B,KAChBC,EADgB,OAEPzB,oBAAS,GAFF,mBAE1B0B,EAF0B,KAElBC,EAFkB,KAI3BC,EAAe,SAAAf,GACnBY,EAAS,eAAKD,EAAN,eAAiBX,EAAEgB,OAAOC,KAAOjB,EAAEgB,OAAOE,UAwBpDC,qBAAU,gBACcC,IAAtBvC,EAAMwC,aAA6BP,GAAQ,QAbjBM,IAAtBvC,EAAMwC,aACRT,EAAS/B,EAAMwC,eAehB,CAACxC,EAAMwC,cAjCuB,IAoC1B/B,EAAQC,qBAAWb,GAAnBY,KAGP,OACE,yBAAKE,UAAYF,EAA6B,2CAAtB,0BACC8B,IAAtBvC,EAAMwC,YAA4B,kDAA8B,4CACjE,0BAAMC,SAAWT,EApBK,SAACb,GACzBA,EAAEuB,iBACF1C,EAAM2C,gBAAgBb,GACtBC,EAAS,CAACnB,MAAO,GAAIG,YAAa,GAAIG,GAAI,GAAIS,UAAU,KAhB3C,SAAAR,GACbA,EAAEuB,iBACF1C,EAAM4C,SAASd,GACfC,EAAS,CAACnB,MAAO,GAAIG,YAAa,GAAIG,GAAI,GAAIS,UAAU,MA+BpD,2BACEkB,SAAUX,EACVvB,UAAYF,EAAyB,mCAAlB,gBACnBqC,KAAK,OACLV,KAAK,QACLC,MAAOP,EAASlB,MAChBmC,YAAY,oBAEd,2BACEF,SAAUX,EACVvB,UAAYF,EAAyB,mCAAlB,gBACnBqC,KAAK,OACLT,MAAOP,EAASf,YAEhBqB,KAAK,cACLW,YAAY,gBAEd,4BAAQD,KAAK,SAASnC,UAAU,UAC5BqB,EAAyB,eAAhB,mBChERgB,G,MAAclD,wBAAc,CACvCmD,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gBCyKKC,EAxKI,WAAO,IAAD,EACKhD,mBAAS,IADd,mBAChBgB,EADgB,KACPiC,EADO,KAEf9C,EAASC,qBAAWb,GAApBY,KACF+C,EAAO9C,qBAAWsC,GAHD,EAIe1C,qBAJf,mBAIhBkC,EAJgB,KAIHiB,EAJG,OAKWnD,oBAAS,GALpB,mBAKhBF,EALgB,KAKLsD,EALK,KAQjBC,EAAU,uCAAG,8BAAAC,EAAA,sEAEfF,GAAa,GAFE,SAGQG,MAAM,GAAD,OACvBC,oCADuB,6BAC+BN,EAAKN,QAC9D,CACEa,OAAQ,MACRC,QAAS,CACP,cAAiB,UAAYR,EAAKL,SARzB,cAGTc,EAHS,gBAaYA,EAASC,OAbrB,eAekB3B,KAF3B4B,EAbS,QAeEC,aACfb,EAASY,EAAaC,YAAYC,WAE/BJ,EAASK,GAlBC,uBAmBP,IAAIC,MAAMJ,EAAaK,SAnBhB,0DAsBfC,QAAQC,IAAR,MAtBe,QAwBjBhB,GAAa,GAxBI,0DAAH,qDA2BVd,EAAQ,uCAAG,WAAMd,GAAN,eAAA8B,EAAA,sEAEbF,GAAa,GAFA,SAGUG,MAAMC,iDAAqD,CAChFC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYR,EAAKL,OAEpCwB,KAAMC,KAAKC,UAAU,CACnBjE,MAAOkB,EAASlB,MAChBG,YAAae,EAASf,YACtB+D,KAAMhD,EAASgD,KACfC,QAASvB,EAAKN,OACdvB,SAAUG,EAASH,aAdV,cAGPsC,EAHO,gBAkBPA,EAASC,OAlBF,uDAoBbO,QAAQC,IAAR,MApBa,QAsBfhB,GAAa,GACbC,IAvBe,yDAAH,sDA0BRvC,EAAW,uCAAG,WAAMF,GAAN,eAAA0C,EAAA,6DACZoB,EAAiB1D,EAAQ2D,QAAO,SAAAxD,GAAK,OAAIA,EAAMP,KAAOA,KAD1C,kBAGV2C,MAAMC,oCAAA,uBAAoD5C,GAAM,CACpE6C,OAAQ,SACRC,QAAS,CACP,cAAiB,UAAYR,EAAKL,SANtB,OAShBO,GAAa,GATG,gDAWhBe,QAAQC,IAAR,MAXgB,QAalBhB,GAAa,GACbH,EAASyB,GAdS,yDAAH,sDAiBX/D,EAAS,uCAAG,WAAMC,GAAN,iBAAA0C,EAAA,+EAGSC,MAAMC,oCAAA,uBAAoD5C,GAAM,CACrF6C,OAAQ,MACRC,QAAS,CACP,cAAiB,UAAYR,EAAKL,SANxB,cAGRc,EAHQ,gBASCA,EAASC,OATV,OASdgB,EATc,OAUdzB,EAAeyB,EAAOzD,OAVR,kDAYdgD,QAAQC,IAAR,MAZc,0DAAH,sDAgBT/B,EAAe,uCAAG,WAAMwC,GAAN,eAAAvB,EAAA,+EAEGC,MACrBC,oCAAA,uBAAoDqB,EAAYjE,IAChE,CACE6C,OAAQ,QACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYR,EAAKL,OACjFwB,KAAMC,KAAKC,UAAU,CACnBjE,MAAOuE,EAAYvE,MACnBG,YAAaoE,EAAYpE,YACzBgE,QAASI,EAAYJ,YAVP,cAEdd,EAFc,gBAedA,EAASC,OAfK,OAgBpBP,IAhBoB,gDAkBpBc,QAAQC,IAAR,MAlBoB,yDAAH,sDAsBfU,EAAqB,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,6DAC5Ba,QAAQC,IAAIW,GADgB,kBAGHxB,MACrBC,oCAAA,uBAAoDuB,GACpD,CACEtB,OAAQ,QACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYR,EAAKL,OACjFwB,KAAMC,KAAKC,UAAU,CACnBlD,UAAU,MATU,cAGpBsC,EAHoB,gBAcpBA,EAASC,OAdW,OAe1BP,IAf0B,kDAiB1Bc,QAAQC,IAAR,MAjB0B,0DAAH,sDA4B3B,OAPApC,qBAAU,WACW,OAAhBkB,EAAKN,QACNS,MAGD,CAACH,EAAKN,SAGP,yBAAKvC,UAAYF,EAAsB,6BAAf,cACtB,yBAAKE,UAAU,kBACb,kBAAC,EAAD,CACEW,QAASA,EACTF,YAAaA,EACbF,GAAG,iBACHD,UAAWA,EACXb,UAAWA,EACXwB,eAAgBwD,IAGlB,kBAAC,EAAD,CACExC,SAAUA,EACVJ,YAAaA,EACbG,gBAAiBA,GAEhBvC,GAAa,kBAAC,EAAD,UC1JTkF,G,YAXA,SAAAtF,GACb,OACE,4BACEW,UAAS,iBAAYX,EAAMuF,SAC3BvE,QAAShB,EAAMgB,SAEdhB,EAAMwF,YCCEC,G,MARI,SAACzF,GAClB,OACE,yBAAKW,UAAU,cACZX,EAAMwE,WCsIEkB,EArID,WAAO,IAAD,EACMpF,mBAAS,CAC/BqF,MAAO,CACLtD,MAAO,GACPuD,SAAS,GAEXC,SAAU,CACRxD,MAAO,GACPuD,SAAS,KARK,mBACXE,EADW,KACLC,EADK,OAWgBzF,oBAAS,GAXzB,mBAWX0F,EAXW,KAWAC,EAXA,OAYc3F,oBAAS,GAZvB,mBAYXF,EAZW,KAYA8F,EAZA,OAaQ5F,oBAAS,GAbjB,mBAaX6F,EAbW,KAaJC,EAbI,KAeZC,EAAkB,SAAAlF,GACtB4E,EAAQ,eAAKD,EAAN,eAAa3E,EAAEgB,OAAOC,KAAOjB,EAAEgB,OAAOE,UAGzCmB,EAAO9C,qBAAWsC,GAElBsD,EAAY,uCAAG,WAAMnF,GAAN,qBAAAyC,EAAA,yDACnBzC,EAAEuB,iBACFwD,GAAW,IAEPF,EAJe,0CAMQnC,MAAMC,oDAAwD,CACnFC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBW,KAAMC,KAAKC,UAAU,CACnBc,MAAOG,EAAKH,MACZE,SAAUC,EAAKD,aAbJ,cAMT5B,EANS,gBAiBYA,EAASC,OAjBrB,UAiBTC,EAjBS,OAkBVF,EAASK,GAlBC,uBAmBb4B,GAAW,GAEL,IAAI3B,MAAMJ,EAAaK,SArBhB,QAuBf0B,GAAW,GACX1C,EAAKJ,MAAMe,EAAajB,OAAQiB,EAAahB,OAxB9B,kDA0BfiD,EAAS,KAAI5B,SAAW,yBA1BT,2DA8BQX,MAAMC,qDAAyD,CACpFC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBW,KAAMC,KAAKC,UAAU,CACnBc,MAAOG,EAAKH,MACZE,SAAUC,EAAKD,aArCJ,eA8BT5B,EA9BS,iBAyCYA,EAASC,OAzCrB,WAyCTC,EAzCS,OA0CVF,EAASK,GA1CC,uBA2Cb4B,GAAW,GAEL,IAAI3B,MAAMJ,EAAaK,SA7ChB,QA+Cf0B,GAAW,GACX1C,EAAKJ,MAAMe,EAAajB,OAAQiB,EAAahB,OAhD9B,mDAkDfiD,EAAS,KAAI5B,SAAW,yBACxBC,QAAQC,IAAR,MAnDe,kEAAH,sDA6DlB,OACE,yBAAK/D,UAAU,SACZP,EACC,kBAAC,EAAD,CAASD,SAAS,IAElB,oCACE,0BAAMQ,UAAU,SACd,0CACA,0BAAMA,UAAU,4BACd,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,uBAGnB,6EACA,0BAAM8B,SAAU6D,GACd,8BACE,2BAAOC,QAAQ,SAAf,SACA,2BACEzD,KAAK,QACLV,KAAK,QACLW,YAAY,iBACZF,SAAUwD,KAGd,8BACE,2BAAOE,QAAQ,YAAf,YACA,2BACEzD,KAAK,WACLV,KAAK,WACLW,YAAY,WACZF,SAAUwD,KAGd,kBAAC,EAAD,CAAQvD,KAAK,UAAUkD,EAAY,QAAU,WAAoB,KAEnE,kBAAC,EAAD,CACElD,KAAK,SACLyC,QAAQ,uBACRvE,QA5Ce,WACvBiF,GAAcD,KA6CLA,EAAY,uBAAyB,yBAEvCG,GAAS,kBAAC,EAAD,CAAY3B,QAAS2B,O,gBCnG1BK,EA3BH,WAAO,IACV/F,EAAQC,qBAAWb,GAAnBY,KACA4C,EAAU3C,qBAAWsC,GAArBK,OAMP,OACE,yBAAK1C,UAAYF,EAAe,eAAR,OACtB,0BAAME,UAAU,aACd,kBAAC,IAAD,CAAS8F,GAAG,KAAI,2CAEhB,0BAAM9F,UAAU,4BACd,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,uBAGnB,wBAAIA,UAAU,WACZ,wBAAIA,UAAU,WAAU,kBAAC,IAAD,CAAS8F,GAAG,aAAZ,aACxB,wBAAI9F,UAAU,UAAUK,QAjBR,SAAAG,GACpBkC,MAgBI,a,yBCIOqD,G,MAxBE,WAAO,IAAD,EAEGhG,qBAAWb,GAA5BY,EAFc,EAEdA,KAAMkG,EAFQ,EAERA,QAYb,OACE,yBAAKhG,UAAYF,EAAoB,yBAAb,YACtB,yBAAKE,UAAU,mBACf,uDAA4B,kBAAC,IAAD,CAAQA,UAAU,SAASkC,SAbhC,WACzB8D,GAASlG,GACTmG,OAAOC,aAAaC,QAAQ,aAAcrG,IAW6CsG,QAAStG,KAC9F,kBAAC,EAAD,CAAQO,QATS,WACnB2F,GAAQ,GACRC,OAAOC,aAAaC,QAAQ,aAAa,KAOvC,aZgCSE,EArDC,WAAO,IAAD,EACM1G,oBAAS,GADf,mBACb6C,EADa,KACN8D,EADM,OAEkC3G,qBAFlC,mBAEb4G,EAFa,KAEQC,EAFR,OAGQ7G,mBAAS,4BAHjB,mBAGb4C,EAHa,KAGLkE,EAHK,KAKdhE,EAAQiE,uBAAY,SAACC,EAAKnE,EAAOoE,GACrCN,EAAS9D,GACTiE,EAAUE,GACV,IAAMJ,EACJK,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACpDN,EAAuBD,GACvBL,aAAaC,QACX,WACAlC,KAAKC,UAAU,CACb3B,OAAQoE,EACRnE,MAAOA,EACPuE,WAAYR,EAAoBS,mBAGnC,IAEGtE,EAASgE,uBAAY,WACzBJ,EAAS,MACTG,EAAU,MACVD,EAAuB,MACvBN,aAAae,WAAW,cACvB,IAuBH,OArBAtF,qBAAU,WACR,GAAIa,GAAS+D,EAAqB,CAChC,IAAMW,EAAgBX,EAAoBO,WAAY,IAAID,MAAOC,UACjE7H,EAAckI,WAAWzE,EAAQwE,QAEjCE,aAAanI,KAEd,CAACuD,EAAOE,EAAQ6D,IAEnB5E,qBAAU,WACR,IAAM0F,EAAapD,KAAKqD,MAAMrB,OAAOC,aAAaqB,QAAQ,aAExDF,GACAA,EAAW7E,OACX,IAAIqE,KAAKQ,EAAWN,YAAc,IAAIF,OAEtCP,EAASe,EAAW7E,OACpBiE,EAAUY,EAAW9E,WAEtB,IAEI,CAACA,SAAQC,QAAOC,QAAOC,W,QaqBjB8E,EAvDH,WAAO,IAYbC,EAZY,EACuBpB,IAAhC9D,EADS,EACTA,OAAQC,EADC,EACDA,MAAOC,EADN,EACMA,MAAOC,EADb,EACaA,OADb,EAEQ/C,qBAFR,mBAETG,EAFS,KAEHkG,EAFG,KAoChB,OAhCArE,qBAAU,WACHsE,OAAOC,aAAaqB,QAAQ,aAGc,SAA7CtB,OAAOC,aAAaqB,QAAQ,cAA2BvB,GAAQ,GAF/DC,OAAOC,aAAaC,QAAQ,YAAa,WAI1C,IAKDsB,EADEjF,EAEA,kBAAC,EAAakF,SAAd,CAAuBhG,MAAO,CAAE5B,OAAMkG,YACpC,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO2B,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,GAC3B,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAU9B,GAAG,OAKf,kBAAC,IAAD,CAAO6B,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAMJ,yBAAK5H,UAAU,OACb,kBAACqC,EAAYqF,SAAb,CACEhG,MAAO,CACLY,aAAcE,EACdA,MAAOA,EACPC,MAAOA,EACPC,OAAQA,EACRH,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KAASkF,OCvDCI,QACW,cAA7B5B,OAAO6B,SAASC,UAEe,UAA7B9B,OAAO6B,SAASC,UAEhB9B,OAAO6B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ce13cc3d.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nlet logoutTimer;\n\n\nconst useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(\"5e6017d4a9835a614b38b026\");\n  \n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n  \n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n  \n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  \n  useEffect(() => {\n    const storedData = JSON.parse(window.localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      setToken(storedData.token);\n      setUserId(storedData.userId);\n    }\n  }, []);\n\n  return {userId, token, login, logout}\n}\n\n\nexport default useAuth;","import {createContext} from 'react';\n\n\nconst themeContext = createContext(false);\n\n\nexport default themeContext;","import React from 'react';\nimport {SyncLoader} from 'react-spinners';\n\nconst Spinner = (props) => {\n  ;\n\n  \n  return (\n    <SyncLoader color='#ff5555' size={15} loading={props.isLoading}/>\n  )\n}\n\nexport default Spinner\n","import React, { useState, useContext } from \"react\";\nimport themeContext from '../../context/themeContext'\nimport \"./Story.css\";\n\nconst Story = props => {\n  const [isExpanded, expand] = useState(false);\n  const {dark} = useContext(themeContext);\n\n\n  const expandStory = e => {\n    expand(!isExpanded);\n  };\n\n  const deleteClickHandler = e => {\n    props.deleteStory(props.id);\n  };\n\n  // const updateProgressHandler = e => {\n  //   props.updateProgress(props.id);\n  // }\n\n  return (\n    <div className={!dark ? 'Story' : 'Story Story-dark'}>\n      <div className=\"TitleDiv\">\n        <h2>{props.title}</h2>\n        {/* <div className=\"ProgressTag\" onClick={updateProgressHandler}>{props.progress === true ? 'In Progress' : 'Completed'}</div> */}\n      </div>\n      <div\n        className=\"Description\"\n        style={isExpanded ? { height: \"170px\" } : { height: \"45px\" }}\n      >\n        <div>{`${props.description} `}</div>{\" \"}\n        <div className=\"buttons\">\n          <i className=\"fas fa-edit\" onClick={() => props.editStory(props.id)}></i>\n          <i className=\"fas fa-trash-alt\" onClick={deleteClickHandler}></i>\n          <i\n            className={\n              !isExpanded ? \"fas fa-chevron-down\" : \"fas fa-chevron-up\"\n            }\n            onClick={expandStory}\n          ></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","import React, {useContext} from \"react\";\nimport themeContext from '../../context/themeContext';\nimport Spinner from '../Reusable/Spinner';\n\nimport Story from \"../Story/Story\";\n\nimport \"./StoriesContainer.css\";\n\nconst StoriesContainer = props => {\n  const {dark} = useContext(themeContext);\n\n  return (\n    <div className={!dark ? 'StoriesContainer' : \"StoriesContainer StoriesContainer-dark\"}>\n\n      <h1>My Stories</h1>\n      {props.isLoading ? <Spinner /> :\n      \n      props.stories.length === 0 ? <p>Looks like you don't have any stories yet.</p> : props.stories.map(story => (\n        <Story\n          title={story.title}\n          id={story.id}\n          description={story.description}\n          key={story.id}\n          deleteStory={props.deleteStory}\n          progress={story.progress}\n          editStory={props.editStory}\n          updateProgress={props.updateProgress}\n          isLoading={props.isLoading}\n\n        />\n      ))}\n\n      \n    </div>\n  );\n};\n\nexport default StoriesContainer;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport themeContext from '../../context/themeContext'\nimport \"./NewStoryContainer.css\";\n\n\nconst NewStoryContainer = props => {\n  const [newStory, setStory] = useState({ title: \"\", description: \"\", id: \"\", progress: true });\n  const [inEdit, setEdit] = useState(false);\n\n  const handleChange = e => {\n    setStory({ ...newStory, [e.target.name]: e.target.value });\n  };\n\n\n  const Submit = e => {\n    e.preventDefault();\n    props.addStory(newStory);\n    setStory({title: \"\", description: \"\", id: \"\", progress: true});\n  };\n\n\n  const editHandler = () => {\n    if (props.storyToEdit !== undefined) {\n      setStory(props.storyToEdit);\n    }\n  }\n\n  const submitEditHandler = (e) => {\n    e.preventDefault();\n    props.submitEditStory(newStory);\n    setStory({title: \"\", description: \"\", id: \"\", progress: true});\n\n  }\n\n  useEffect(() => {\n    props.storyToEdit !== undefined && setEdit(true);\n    editHandler();\n   \n  }, [props.storyToEdit])\n  \n\n  const {dark} = useContext(themeContext);\n\n\n  return (\n    <div className={!dark ? \"NewStoryContainer\" : \"NewStoryContainer NewStoryContainer-dark\"}>\n      {props.storyToEdit === undefined ? <h2>Create a new story</h2> : <h2>Update story</h2>}\n      <form onSubmit={!inEdit ? Submit : submitEditHandler}>\n        <input\n          onChange={handleChange}\n          className={!dark ? \"NewStoryInput\" : \"NewStoryInput NewStoryInput-dark\"}\n          type=\"text\"\n          name=\"title\"\n          value={newStory.title}\n          placeholder=\"New story title\"\n        />\n        <input\n          onChange={handleChange}\n          className={!dark ? \"NewStoryInput\" : \"NewStoryInput NewStoryInput-dark\"}\n          type=\"text\"\n          value={newStory.description}\n\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <button type=\"submit\" className=\"Button\">\n          {!inEdit ? \"Add Story +\" : \"Update Story\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewStoryContainer;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useState, useEffect, useContext } from \"react\";\nimport StoriesContainer from \"../StoriesContainer/StoriesContainer\";\nimport NewStoryContainer from \"../NewStoryContainer/NewStoryContainer\";\nimport \"./StoryBoard.css\";\nimport themeContext from \"../../context/themeContext\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Spinner from \"../Reusable/Spinner\";\n\nconst StoryBoard = () => {\n  const [stories, setState] = useState([]);\n  const { dark } = useContext(themeContext);\n  const auth = useContext(AuthContext);\n  const [storyToEdit, setStoryToEdit] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const getStories = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/api/stories/user/${auth.userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": 'Bearer ' + auth.token\n          }\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (responseData.userStories !== undefined) {\n        setState(responseData.userStories.reverse());\n      }\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setIsLoading(false);\n  };\n\n  const addStory = async newStory => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/stories/', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": 'Bearer ' + auth.token\n        },\n        body: JSON.stringify({\n          title: newStory.title,\n          description: newStory.description,\n          tags: newStory.tags,\n          creator: auth.userId,\n          progress: newStory.progress\n        })\n      });\n\n      await response.json();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsLoading(false);\n    getStories();\n  };\n\n  const deleteStory = async id => {\n    const updatedStories = stories.filter(story => story.id !== id);\n    try {\n      await fetch(process.env.REACT_APP_BACKEND_URL + `/api/stories/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": 'Bearer ' + auth.token\n        }\n      });\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n    setIsLoading(false);\n    setState(updatedStories);\n  };\n\n  const editStory = async id => {\n    let toEdit;\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/api/stories/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": 'Bearer ' + auth.token\n        }\n      });\n      toEdit = await response.json();\n      setStoryToEdit(toEdit.story);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const submitEditStory = async editedStory => {\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_BACKEND_URL + `/api/stories/${editedStory.id}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\", \"Authorization\": 'Bearer ' + auth.token },\n          body: JSON.stringify({\n            title: editedStory.title,\n            description: editedStory.description,\n            creator: editedStory.creator\n          })\n        }\n        \n      );\n      await response.json();\n      getStories();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateProgressHandler = async (storyId) => {\n    console.log(storyId);\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_BACKEND_URL + `/api/stories/${storyId}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\", \"Authorization\": 'Bearer ' + auth.token },\n          body: JSON.stringify({\n            progress: false\n          })\n        }\n        \n      );\n      await response.json();\n      getStories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if(auth.userId !== null) {\n      getStories();\n    }\n    \n  }, [auth.userId]);\n\n  return (\n    <div className={!dark ? \"StoryBoard\" : \"StoryBoard StoryBoard-dark\"}>\n      <div className=\"ContentWrapper\">\n        <StoriesContainer\n          stories={stories}\n          deleteStory={deleteStory}\n          id=\"StoryContainer\"\n          editStory={editStory}\n          isLoading={isLoading}\n          updateProgress={updateProgressHandler}\n        />\n\n        <NewStoryContainer\n          addStory={addStory}\n          storyToEdit={storyToEdit}\n          submitEditStory={submitEditStory}\n        >\n          {isLoading && <Spinner />}\n        </NewStoryContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default StoryBoard;\n","import React from \"react\";\nimport \"./Button.css\";\nimport \"../Auth/Login.css\";\n\nconst Button = props => {\n  return (\n    <button\n      className={`Button ${props.classes}`}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './ErrorModal.css';\n\nconst ErrorModal = (props) => {\n  return (\n    <div className=\"ErrorModal\">\n      {props.message}\n    </div>\n  )\n}\n\nexport default ErrorModal\n\n","import React, { useContext, useState } from \"react\";\nimport \"./Login.css\";\nimport Button from \"../Reusable/Button\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Spinner from \"../Reusable/Spinner\";\nimport ErrorModal from '../Reusable/ErrorModal';\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  });\n  const [loginMode, setLoginMode] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(true);\n\n  const onChangeHandler = e => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const auth = useContext(AuthContext);\n\n  const loginHandler = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (loginMode) {\n      try {\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/users/login', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: user.email,\n            password: user.password\n          })\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          setLoading(false);\n\n          throw new Error(responseData.message)\n        }\n        setLoading(false);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n      }\n    } else {\n      try {\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/users/signup', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: user.email,\n            password: user.password\n          })\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          setLoading(false);\n\n          throw new Error(responseData.message)\n        }\n        setLoading(false);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n        console.log(err)\n      }\n    }\n  };\n\n  const loginModeHandler = () => {\n    setLoginMode(!loginMode);\n  };\n\n\n  return (\n    <div className=\"Login\">\n      {isLoading ? (\n        <Spinner loading={true}></Spinner>\n      ) : (\n        <>\n          <span className=\"Title\">\n            <h1>StoryBoard</h1>\n            <span className=\"title-decoration-wrapper\">\n              <div className=\"title-decoration\"></div>\n              <div className=\"title-decoration\"></div>\n              <div className=\"title-decoration\"></div>\n            </span>\n          </span>\n          <p>Because keeping track of ideas should be easy.</p>\n          <form onSubmit={loginHandler}>\n            <span>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"jdoe@gmail.com\"\n                onChange={onChangeHandler}\n              ></input>\n            </span>\n            <span>\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                onChange={onChangeHandler}\n              ></input>\n            </span>\n            <Button type=\"submit\">{loginMode ? \"Login\" : \"Sign up\"}</Button>{\" \"}\n          </form>\n          <Button\n            type=\"button\"\n            classes=\"LoginBtn LoginBtnAlt\"\n            onClick={loginModeHandler}\n          >\n            {loginMode ? \"Not a user? Sign up!\" : \"Already a user? Login\"}\n          </Button>\n          {error && <ErrorModal message={error} />}\n\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useContext} from \"react\";\nimport \"./Nav.css\";\nimport {NavLink} from 'react-router-dom';\nimport themeContext from '../../context/themeContext';\nimport {AuthContext} from '../../context/AuthContext';\n\nconst Nav = () => {\n  const {dark} = useContext(themeContext);\n  const {logout} = useContext(AuthContext)\n\n  const logoutHandler = e => {\n    logout();\n  }\n\n  return (\n    <nav className={!dark ? \"Nav\" : \"Nav Nav-dark\"}>\n      <span className=\"TitleSpan\">\n        <NavLink to='/'><h1>StoryBoard</h1></NavLink>\n        \n        <span className=\"title-decoration-wrapper\">\n          <div className=\"title-decoration\"></div>\n          <div className=\"title-decoration\"></div>\n          <div className=\"title-decoration\"></div>\n        </span>\n      </span>\n      <ul className=\"NavList\">\n        <li className=\"NavItem\"><NavLink to=\"/settings\">Settings</NavLink></li>\n        <li className=\"NavItem\" onClick={logoutHandler}>Logout</li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, {useContext} from 'react';\nimport './Settings.css';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport Button from '../Reusable/Button';\nimport themeContext from '../../context/themeContext';\n\nconst Settings = () => {\n\n  const {dark, setDark} = useContext(themeContext);\n\n  const changeThemeHandler = () => {\n    setDark(!dark);\n    window.localStorage.setItem('darkTheme', !dark);\n  }\n\n  const resetHandler = () => {\n    setDark(false);\n    window.localStorage.setItem('darkTheme', false);\n  }\n\n  return (\n    <div className={!dark ? 'Settings' : 'Settings Settings-dark'}>\n      <div className=\"SettingsWrapper\">\n      <span>Set dark/light theme: <Toggle className=\"Toggle\" onChange={changeThemeHandler} checked={dark} /></span>\n      <Button onClick={resetHandler}>Reset</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, { useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport StoryBoard from \"./Components/StoryBoard/StoryBoard\";\nimport Login from \"./Components/Auth/Login\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Settings from \"./Components/Settings/Settings\";\nimport themeContext from \"./context/themeContext\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport useAuth from './hooks/auth-hook';\n\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n\nconst App = () => {\n  const {userId, token, login, logout} = useAuth();\n  const [dark, setDark] = useState();\n\n  useEffect(() => {\n    if (!window.localStorage.getItem(\"darkTheme\")) {\n      window.localStorage.setItem(\"darkTheme\", \"false\");\n    } else {\n      window.localStorage.getItem(\"darkTheme\") === 'true' && setDark(true);\n    }\n  }, []);\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <themeContext.Provider value={{ dark, setDark }}>\n        <Nav />\n        <Route path=\"/\" exact>\n          <StoryBoard />\n        </Route>\n        <Route path=\"/settings\" exact>\n          <Settings />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </themeContext.Provider>\n    );\n  } else {\n    routes = (\n      <Route path=\"/\" exact>\n        <Login />\n      </Route>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider\n        value={{\n          isLoggedIn: !!token,\n          token: token,\n          login: login,\n          logout: logout,\n          userId: userId\n        }}\n      >\n        <Router>\n          <Switch>{routes}</Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}