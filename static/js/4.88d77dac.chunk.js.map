{"version":3,"sources":["Components/Story/Story.js","Components/StoriesContainer/StoriesContainer.js","Components/NewStoryContainer/NewStoryContainer.js","Components/StoryBoard/StoryBoard.js"],"names":["Story","props","useState","isExpanded","expand","dark","useContext","themeContext","className","title","style","height","description","onClick","editStory","id","e","deleteStory","StoriesContainer","isLoading","Spinner","stories","length","map","story","key","progress","updateProgress","NewStoryContainer","newStory","setStory","inEdit","setEdit","handleChange","target","name","value","useEffect","undefined","storyToEdit","onSubmit","preventDefault","submitEditStory","addStory","onChange","type","placeholder","StoryBoard","setState","auth","AuthContext","setStoryToEdit","setIsLoading","getStories","a","async","fetch","process","userId","method","headers","token","response","json","responseData","userStories","reverse","ok","Error","message","console","log","updatedStories","filter","toEdit","storyId","body","JSON","stringify","tags","creator","editedStory"],"mappings":"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","file":"static/js/4.88d77dac.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport themeContext from '../../context/themeContext'\nimport \"./Story.css\";\n\nconst Story = props => {\n  const [isExpanded, expand] = useState(false);\n  const {dark} = useContext(themeContext);\n\n\n  const expandStory = e => {\n    expand(!isExpanded);\n  };\n\n  const deleteClickHandler = e => {\n    props.deleteStory(props.id);\n  };\n\n  // const updateProgressHandler = e => {\n  //   props.updateProgress(props.id);\n  // }\n\n  return (\n    <div className={!dark ? 'Story' : 'Story Story-dark'}>\n      <div className=\"TitleDiv\">\n        <h2>{props.title}</h2>\n        {/* <div className=\"ProgressTag\" onClick={updateProgressHandler}>{props.progress === true ? 'In Progress' : 'Completed'}</div> */}\n      </div>\n      <div\n        className=\"Description\"\n        style={isExpanded ? { height: \"170px\" } : { height: \"45px\" }}\n      >\n        <div>{`${props.description} `}</div>{\" \"}\n        <div className=\"buttons\">\n          <i className=\"fas fa-edit\" onClick={() => props.editStory(props.id)}></i>\n          <i className=\"fas fa-trash-alt\" onClick={deleteClickHandler}></i>\n          <i\n            className={\n              !isExpanded ? \"fas fa-chevron-down\" : \"fas fa-chevron-up\"\n            }\n            onClick={expandStory}\n          ></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","import React, {useContext} from \"react\";\nimport themeContext from '../../context/themeContext';\nimport Spinner from '../Reusable/Spinner';\n\nimport Story from \"../Story/Story\";\n\nimport \"./StoriesContainer.css\";\n\nconst StoriesContainer = props => {\n  const {dark} = useContext(themeContext);\n\n  return (\n    <div className={!dark ? 'StoriesContainer' : \"StoriesContainer StoriesContainer-dark\"}>\n\n      <h1>My Stories</h1>\n      {props.isLoading ? <Spinner /> :\n      \n      props.stories.length === 0 ? <p>Looks like you don't have any stories yet.</p> : props.stories.map(story => (\n        <Story\n          title={story.title}\n          id={story.id}\n          description={story.description}\n          key={story.id}\n          deleteStory={props.deleteStory}\n          progress={story.progress}\n          editStory={props.editStory}\n          updateProgress={props.updateProgress}\n          isLoading={props.isLoading}\n\n        />\n      ))}\n\n      \n    </div>\n  );\n};\n\nexport default StoriesContainer;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport themeContext from '../../context/themeContext'\nimport \"./NewStoryContainer.css\";\n\n\nconst NewStoryContainer = props => {\n  const [newStory, setStory] = useState({ title: \"\", description: \"\", id: \"\", progress: true });\n  const [inEdit, setEdit] = useState(false);\n\n  const handleChange = e => {\n    setStory({ ...newStory, [e.target.name]: e.target.value });\n  };\n\n\n  const Submit = e => {\n    e.preventDefault();\n    props.addStory(newStory);\n    setStory({title: \"\", description: \"\", id: \"\", progress: true});\n  };\n\n\n  const editHandler = () => {\n    if (props.storyToEdit !== undefined) {\n      setStory(props.storyToEdit);\n    }\n  }\n\n  const submitEditHandler = (e) => {\n    e.preventDefault();\n    props.submitEditStory(newStory);\n    setStory({title: \"\", description: \"\", id: \"\", progress: true});\n\n  }\n\n  useEffect(() => {\n    props.storyToEdit !== undefined && setEdit(true);\n    editHandler();\n   \n  }, [props.storyToEdit])\n  \n\n  const {dark} = useContext(themeContext);\n\n\n  return (\n    <div className={!dark ? \"NewStoryContainer\" : \"NewStoryContainer NewStoryContainer-dark\"}>\n      {props.storyToEdit === undefined ? <h2>Create a new story</h2> : <h2>Update story</h2>}\n      <form onSubmit={!inEdit ? Submit : submitEditHandler}>\n        <input\n          onChange={handleChange}\n          className={!dark ? \"NewStoryInput\" : \"NewStoryInput NewStoryInput-dark\"}\n          type=\"text\"\n          name=\"title\"\n          value={newStory.title}\n          placeholder=\"New story title\"\n        />\n        <input\n          onChange={handleChange}\n          className={!dark ? \"NewStoryInput\" : \"NewStoryInput NewStoryInput-dark\"}\n          type=\"text\"\n          value={newStory.description}\n\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <button type=\"submit\" className=\"Button\">\n          {!inEdit ? \"Add Story +\" : \"Update Story\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewStoryContainer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport StoriesContainer from \"../StoriesContainer/StoriesContainer\";\nimport NewStoryContainer from \"../NewStoryContainer/NewStoryContainer\";\nimport \"./StoryBoard.css\";\nimport themeContext from \"../../context/themeContext\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Spinner from \"../Reusable/Spinner\";\n\nconst StoryBoard = () => {\n  const [stories, setState] = useState([]);\n  const { dark } = useContext(themeContext);\n  const auth = useContext(AuthContext);\n  const [storyToEdit, setStoryToEdit] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const getStories = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/api/stories/user/${auth.userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": 'Bearer ' + auth.token\n          }\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (responseData.userStories !== undefined) {\n        setState(responseData.userStories.reverse());\n      }\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setIsLoading(false);\n  };\n\n  const addStory = async newStory => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/stories/', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": 'Bearer ' + auth.token\n        },\n        body: JSON.stringify({\n          title: newStory.title,\n          description: newStory.description,\n          tags: newStory.tags,\n          creator: auth.userId,\n          progress: newStory.progress\n        })\n      });\n\n      await response.json();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsLoading(false);\n    getStories();\n  };\n\n  const deleteStory = async id => {\n    const updatedStories = stories.filter(story => story.id !== id);\n    try {\n      await fetch(process.env.REACT_APP_BACKEND_URL + `/api/stories/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": 'Bearer ' + auth.token\n        }\n      });\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n    setIsLoading(false);\n    setState(updatedStories);\n  };\n\n  const editStory = async id => {\n    let toEdit;\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/api/stories/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": 'Bearer ' + auth.token\n        }\n      });\n      toEdit = await response.json();\n      setStoryToEdit(toEdit.story);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const submitEditStory = async editedStory => {\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_BACKEND_URL + `/api/stories/${editedStory.id}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\", \"Authorization\": 'Bearer ' + auth.token },\n          body: JSON.stringify({\n            title: editedStory.title,\n            description: editedStory.description,\n            creator: editedStory.creator\n          })\n        }\n        \n      );\n      await response.json();\n      getStories();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateProgressHandler = async (storyId) => {\n    console.log(storyId);\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_BACKEND_URL + `/api/stories/${storyId}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\", \"Authorization\": 'Bearer ' + auth.token },\n          body: JSON.stringify({\n            progress: false\n          })\n        }\n        \n      );\n      await response.json();\n      getStories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if(auth.userId !== null) {\n      getStories();\n    }\n    \n  }, [auth.userId]);\n\n  return (\n    <div className={!dark ? \"StoryBoard\" : \"StoryBoard StoryBoard-dark\"}>\n      <div className=\"ContentWrapper\">\n        <StoriesContainer\n          stories={stories}\n          deleteStory={deleteStory}\n          id=\"StoryContainer\"\n          editStory={editStory}\n          isLoading={isLoading}\n          updateProgress={updateProgressHandler}\n        />\n\n        <NewStoryContainer\n          addStory={addStory}\n          storyToEdit={storyToEdit}\n          submitEditStory={submitEditStory}\n        >\n          {isLoading && <Spinner />}\n        </NewStoryContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default StoryBoard;\n"],"sourceRoot":""}